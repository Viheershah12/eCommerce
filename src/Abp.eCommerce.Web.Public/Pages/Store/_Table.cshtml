@using Abp.eCommerce.Localization
@using Abp.eCommerce.Models
@using Abp.eCommerce.Web.Public.Models.Store
@using Abp.eCommerce.Web.Public.Pages.Shared.Components.Pagination
@using Microsoft.AspNetCore.Mvc.Localization

@inject IHtmlLocalizer<eCommerceResource> L

@model BasePagedModel<ProductModel>

<div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-4">
    @foreach (var product in Model.Items)
    {
        <div class="col">
            <div class="product-card card h-100 shadow-sm border-0 rounded-3 position-relative overflow-hidden p-1">
                <div class="product-image-wrapper">
                    @{
                        var picture = product.Media?.FirstOrDefault();
                    }

                    @if (picture != null)
                    {
                        @if (picture?.DownloadBinary != null && picture.DownloadBinary.Length > 0)
                        {
                            <img src="data:@picture.ContentType;base64,@Convert.ToBase64String(picture.DownloadBinary)"
                                 class="product-image"
                                 alt="@product.Name"
                                 onload="this.nextElementSibling?.classList.remove('d-flex');"
                                 onerror="this.style.display='none'; this.nextElementSibling?.classList.add('d-flex');" />
                            <div class="fallback-text d-flex">@product.Name</div>
                        }
                        else
                        {
                            <div class="fallback-text d-flex">@product.Name</div>
                        }
                    }
                    else
                    {
                        <div class="fallback-text d-flex">@product.Name</div>
                    }
                </div>

                <div class="card-body d-flex flex-column">
                    <h6 class="card-title text-truncate">@product.Name</h6>
                    <p class="text-primary fw-semibold mb-2">KES @product.Price?.ToString("F2")</p>
                </div>

                <div class="product-overlay p-3">
                    <h5 class="text-muted small">@product.Name</h5>
                    <p class="text-muted small">@product.Description</p>
                    <a href="@Url.Page("Product", new { id = product.Id })" class="btn btn-sm btn-outline-primary mt-2">@L["ViewDetails"]</a>
                </div>
            </div>
        </div>
    }
</div>

@(await Component.InvokeAsync<PaginationViewComponent>(new { result = Model, page = "Store/Index", pageHandler = "Paginate", partialId = "#productsTable", data = new { Category = Model.Items.FirstOrDefault()?.Category } }))

