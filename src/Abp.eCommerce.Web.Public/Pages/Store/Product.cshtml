@page
@using Abp.eCommerce.Localization
@using Abp.eCommerce.Web.Public.Menus
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Layout

@inject IPageLayout PageLayout
@inject IStringLocalizer<eCommerceResource> L

@model Abp.eCommerce.Web.Public.Pages.Store.ProductModel

@{
    PageLayout.Content.Title = L["Menu:Product"];
    PageLayout.Content.MenuItemName = eCommerceWebPublicMenus.Store;

    PageLayout.Content.BreadCrumb.Add(L["Menu:Store"], "/Store/");
}

@section scripts {
    <abp-script src="/Pages/Store/js/Product.js" />
}

@section styles {
    <style>
        .custom-tabs .nav-link {
            border: none;
            color: #555;
            font-weight: 500;
        }

        .custom-tabs .nav-link.active {
            background-color: #fff;
            border-radius: 0.5rem 0.5rem 0 0;
            font-weight: 600;
            color: #000;
            box-shadow: 0 -3px 0 #0d6efd inset;
        }

        .custom-tab-content {
            background: #f8f9fa;
            border-radius: 0 0 0.5rem 0.5rem;
            padding: 1.5rem;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            border: 1px solid #dee2e6;
            border-top: none;
        }
    </style>
}

<div class="row align-items-stretch">
    <!-- Product Images -->
    <div class="col-lg-7 mb-4 d-flex">
        @if (Model.Product.UploadedMedia != null && Model.Product.UploadedMedia.Any(img => img.DownloadBinary != null))
        {
            var images = Model.Product.UploadedMedia
            .Where(img => img.DownloadBinary != null)
            .Select((img, index) =>
            {
                var base64 = Convert.ToBase64String(img.DownloadBinary);
                var src = $"data:{img.ContentType};base64,{base64}";
                return new { Src = src, Alt = img.Filename ?? $"Image {index}", Index = index };
            }).ToList();

            var carouselId = "productImageCarousel";

            @if (images?.Any() == true)
            {
                <div id="@carouselId" class="carousel slide border rounded w-100 d-flex flex-column" data-bs-ride="carousel" style="flex: 1;">
                    <!-- Indicators -->
                    <div class="carousel-indicators">
                        @for (int i = 0; i < images.Count; i++)
                        {
                            <button type="button" data-bs-target="#@carouselId" data-bs-slide-to="@i"
                                    class="@(i == 0 ? "active" : "")" aria-current="@(i == 0 ? "true" : "false")"
                                    aria-label="Slide @(i + 1)"></button>
                        }
                    </div>

                    <!-- Slides -->
                    <div class="carousel-inner rounded flex-grow-1">
                        @for (int i = 0; i < images.Count; i++)
                        {
                            <div class="carousel-item @(i == 0 ? "active" : "") h-100" style="background-color: #fff">
                                <img src="@images[i].Src" style="max-height: 400px; object-fit: contain; cursor: pointer;" class="d-block w-100 img-fluid rounded" alt="@images[i].Alt" />
                            </div>
                        }
                    </div>

                    <!-- Controls -->
                    <button class="carousel-control-prev" type="button" data-bs-target="#@carouselId" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#@carouselId" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            }
            else
            {
                <div class="border rounded w-100 d-flex align-items-center justify-content-center bg-light" style="height: 400px;">
                    <span class="text-muted">No image available</span>
                </div>
            }
        }
        else
        {
            <div class="border rounded w-100 d-flex align-items-center justify-content-center bg-light" style="height: 400px;">
                <span class="text-muted">No image available</span>
            </div>
        }
    </div>

    <!-- Product Details Sidebar -->
    <div class="col-lg-5 mb-4 d-flex">
        <div class="border rounded p-4 bg-light w-100" style="flex: 1;">
            <h2 class="mb-3">@Model.Product.Name</h2>

            <p class="text-muted mb-2">@L["SKU"]: <strong>@Model.Product.SKU</strong></p>

            <h4 class="text-primary mb-3">KES @Model.Product.Price</h4>

            <p><span class="badge bg-success">In Stock</span></p>

            @if (Model.Product.ProductTags != null && Model.Product.ProductTags.Any())
            {
                <div class="mt-3">
                    <strong>@L["Tags"]:</strong>
                    <div class="mt-2 d-flex flex-wrap gap-2">
                        @foreach (var tag in Model.Product.ProductTags)
                        {
                            <span class="badge bg-secondary rounded-pill">#@tag.Name</span>
                        }
                    </div>
                </div>
            }

            <div class="d-grid gap-2 mt-4">
                <button class="btn btn-primary btn-lg">@L["AddToCart"]</button>
                <button class="btn btn-outline-secondary">@L["AddToWishlist"]</button>
            </div>
        </div>
    </div>
</div>

<!-- Product Tabs -->
<abp-row class="mb-3 p-2">
    <!-- Tabs -->
    <ul class="nav nav-tabs custom-tabs mb-3" id="productTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="description-tab" data-bs-toggle="tab" data-bs-target="#description"
                    type="button" role="tab" aria-controls="description" aria-selected="true">
                @L["Description"]
            </button>
        </li>

        <li class="nav-item" role="presentation">
            <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" data-bs-target="#reviews"
                    type="button" role="tab" aria-controls="reviews" aria-selected="false">
                @L["Reviews"]
            </button>
        </li>

        <li class="nav-item" role="presentation">
            <button class="nav-link" id="similar-tab" data-bs-toggle="tab" data-bs-target="#similar"
                    type="button" role="tab" aria-controls="similar" aria-selected="false">
                @L["SimilarProducts"]
            </button>
        </li>
    </ul>

    <!-- Tab Content -->
    <div class="tab-content custom-tab-content" id="productTabContent">
        <div class="tab-pane fade show active" id="description" role="tabpanel" aria-labelledby="description-tab">
            <p>@Model.Product.Description</p>
        </div>

        <div class="tab-pane fade" id="reviews" role="tabpanel" aria-labelledby="reviews-tab">
            <p>No reviews yet.</p>
        </div>

        <div class="tab-pane fade" id="similar" role="tabpanel" aria-labelledby="similar-tab">
            @if (Model.SimilarProduct?.Any() == true)
            {
                var groupedProducts = Model.SimilarProduct
                .Select((product, index) => new { product, index })
                .GroupBy(x => x.index / 5)
                .Select(g => g.Select(x => x.product).ToList())
                .ToList();

                var carouselId = "similarProductCarousel";

                <div id="@carouselId" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        @for (int i = 0; i < groupedProducts.Count; i++)
                        {
                            var group = groupedProducts[i];
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-5 g-3">
                                    @foreach (var product in group)
                                    {
                                        <div class="col">
                                            <div class="product-card card h-100 shadow-sm border-0 rounded-3 position-relative overflow-hidden p-1">
                                                <div class="product-image-wrapper">
                                                    @{
                                                        var picture = product.Media?.FirstOrDefault();
                                                    }

                                                    @if (picture?.DownloadBinary?.Length > 0)
                                                    {
                                                        <img src="data:@picture.ContentType;base64,@Convert.ToBase64String(picture.DownloadBinary)"
                                                             class="product-image"
                                                             alt="@product.Name"
                                                             onload="this.nextElementSibling?.classList.remove('d-flex');"
                                                             onerror="this.style.display='none'; this.nextElementSibling?.classList.add('d-flex');" />
                                                        <div class="fallback-text d-flex">@product.Name</div>
                                                    }
                                                    else
                                                    {
                                                        <div class="fallback-text d-flex">@product.Name</div>
                                                    }
                                                </div>

                                                <div class="card-body d-flex flex-column">
                                                    <h6 class="card-title text-truncate">@product.Name</h6>
                                                    <p class="text-primary fw-semibold mb-2">KES @product.Price?.ToString("F2")</p>
                                                </div>

                                                @{
                                                    var shortDescription = product.Description?.Length > 100
                                                    ? product.Description.Substring(0, 100) + "..."
                                                    : product.Description;
                                                }

                                                <div class="product-overlay p-3">
                                                    <h5 class="text-muted small">@product.Name</h5>
                                                    <p class="text-muted small">@shortDescription</p>
                                                    <a href="/Store/Product?id=@product.Id" target="_blank" class="btn btn-sm btn-outline-primary mt-2">@L["ViewDetails"]</a>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>

                    <!-- Carousel Controls -->
                    @if (Model.SimilarProduct.Count > 5)
                    {
                        <button class="carousel-control-prev" type="button" data-bs-target="#@carouselId" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#@carouselId" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    }
                </div>
            }
            else
            {
                <p class="text-muted">No similar products available.</p>
            }
        </div>

    </div>
</abp-row>
