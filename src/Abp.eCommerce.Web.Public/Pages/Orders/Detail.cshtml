@page
@using Abp.eCommerce.Enums
@using Abp.eCommerce.Helpers
@using Abp.eCommerce.Localization
@using Abp.eCommerce.Web.Public.Menus
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Layout


@inject IPageLayout PageLayout
@inject IStringLocalizer<eCommerceResource> L

@model Abp.eCommerce.Web.Public.Pages.Orders.DetailModel

@{
    PageLayout.Content.Title = L["Menu:OrderDetail"];
    PageLayout.Content.MenuItemName = eCommerceWebPublicMenus.Order;

    PageLayout.Content.BreadCrumb.Add(L["Menu:Order"], "/Orders/");
}

@functions{
    string GetOrderStatusBadgeClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "bg-warning",
            OrderStatus.Processing => "bg-primary",
            OrderStatus.Shipped => "bg-info text-dark",
            OrderStatus.Completed => "bg-success",
            OrderStatus.Cancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }

    string GetPaymentStatusBadgeClass(PaymentStatus status)
    {
        return status switch
        {
            PaymentStatus.Pending => "bg-warning",
            PaymentStatus.UnPaid => "bg-danger",
            PaymentStatus.Paid => "bg-success",
            _ => "bg-secondary"
        };
    }

    string GetShippingStatusBadgeClass(ShippingStatus status)
    {
        return status switch
        {
            ShippingStatus.ShippingNotRequired => "bg-secondary",
            ShippingStatus.Pending => "bg-warning",
            ShippingStatus.PreparedToShipped => "bg-primary",
            ShippingStatus.PartiallyShipped => "bg-info text-dark",
            ShippingStatus.Shipped => "bg-success",
            ShippingStatus.Delivered => "bg-success",
            _ => "bg-secondary"
        };
    }
}

@if (Model.Order != null)
{
    <div class="row g-4">
        <!-- Left column: Customer + Order -->
        <div class="col-lg-8">
            <!-- Customer Details -->
            <div class="card shadow-sm rounded-4">
                <div class="card-header bg-primary text-white rounded-top-4">
                    <h5 class="mb-0">@L["Title:CustomerInformation"]</h5>
                </div>
                <div class="card-body">
                    @if (Model.Order.Customer.DeliveryAddress != null)
                    {
                        <abp-row>
                            <abp-column size-md="_6">
                                <p><strong>@L["CustomerName"]:</strong> @Model.Order.Customer.CustomerName.ToDisplay()</p>
                            </abp-column>

                            <abp-column-breaker />

                            <abp-column size-md="_6">
                                <p><strong>@L["PhoneNumer"]:</strong> @Model.Order.Customer.PhoneNumber.ToDisplay()</p>
                            </abp-column>

                            <abp-column size-md="_6">
                                <p><strong>@L["Email"]:</strong> @Model.Order.Customer.Email.ToDisplay()</p>
                            </abp-column>

                            <abp-column-breaker />

                            <abp-column size-md="_6">
                                <p><strong>@L["DateOfBirth"]:</strong> @Model.Order.Customer.DateOfBirth.ToDisplay()</p>
                            </abp-column>

                            <abp-column size-md="_6">
                                <p><strong>@L["Gender"]:</strong> @Model.Order.Customer.Gender?.GetDescription().LocalizedEnum(L)</p>
                            </abp-column>

                            <abp-column-breaker />

                            <abp-column size-md="_6">
                                <p><strong>@L["IdentificationType"]:</strong> @Model.Order.Customer.IdentificationType?.GetDescription().LocalizedEnum(L)</p>
                            </abp-column>

                            <abp-column size-md="_6">
                                <p><strong>@L["IdentificationNo"]:</strong> @Model.Order.Customer.IdentificationNo.ToDisplay()</p>
                            </abp-column>

                            <abp-column-breaker />

                            <abp-column>
                                <p><strong>@L["DeliveryAddress"]:</strong> @Model.Order.Customer.DeliveryAddress.Address.ToDisplay()</p>
                            </abp-column>
                        </abp-row>
                    }

                    @if (Model.Order.BillingAddress != null || Model.Order.ShippingAddress != null)
                    {
                        <hr />

                        <div class="row">
                            @if (Model.Order.BillingAddress != null)
                            {
                                <div class="col-md-6">
                                    <h6>@L["Title:BillingAddress"]</h6>
                                    <address>
                                        @Model.Order.BillingAddress.AddressLine1<br />
                                        @Model.Order.BillingAddress.AddressLine2<br />
                                        @Model.Order.BillingAddress.Town, @Model.Order.BillingAddress.PostCode<br />
                                        @Model.Order.BillingAddress.Country<br />
                                        <span>@Model.Order.BillingAddress.TelephoneNumber</span><br />
                                        <span>@Model.Order.BillingAddress.Email</span>
                                    </address>
                                </div>
                            }

                            @if (Model.Order.ShippingAddress != null)
                            {
                                <div class="col-md-6">

                                    <h6>@L["Title:ShippingAddress"]</h6>
                                    <address>
                                        @Model.Order.ShippingAddress.AddressLine1<br />
                                        @Model.Order.ShippingAddress.AddressLine2<br />
                                        @Model.Order.ShippingAddress.Town, @Model.Order.ShippingAddress.PostCode<br />
                                        @Model.Order.ShippingAddress.Country<br />
                                        <span>@Model.Order.ShippingAddress.TelephoneNumber</span><br />
                                        <span>@Model.Order.ShippingAddress.Email</span>
                                    </address>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>

            <!-- Order Details -->
            <div class="card shadow-sm rounded-4 mt-4">
                <div class="card-header bg-info text-white rounded-top-4">
                    <h5 class="mb-0">@L["Title:OrderDetails"]</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive mb-3">
                        <table class="table table-bordered table-hover align-middle">
                            <thead class="table-light">
                                <tr>
                                    <th>@L["Product"]</th>
                                    <th>@L["Quantity"]</th>
                                    <th>@L["Price"]</th>
                                    <th>@L["Total"]</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Order.OrderItems)
                                {
                                    <tr>
                                        <td>@item.ProductName</td>
                                        <td>@item.Quantity</td>
                                        <td>Ksh: @item.Price</td>
                                        <td>Ksh: @item.Total</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot class="table-light">
                                <tr>
                                    <th colspan="3" class="text-end">@L["TotalAmount"]</th>
                                    <th>Ksh: @Model.Order.TotalAmount</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <p>
                                <strong>@L["OrderStatus"]:</strong>
                                <span class="badge @GetOrderStatusBadgeClass(Model.Order.Status)">
                                    <i class="fas fa-clipboard-list me-1"></i> @Model.Order.Status.GetDescription().LocalizedEnum(L)
                                </span>
                            </p>
                        </div>
                        <div class="col-md-4">
                            <p>
                                <strong>@L["PaymentStatus"]:</strong>
                                <span class="badge @GetPaymentStatusBadgeClass(Model.Order.PaymentStatus)">
                                    <i class="fas fa-money-check-alt me-1"></i> @Model.Order.PaymentStatus.GetDescription().LocalizedEnum(L)
                                </span>
                            </p>
                            
                            @if (Model.Order.PaidDate.HasValue)
                            {
                                <p><strong>@L["PaidDate"]:</strong> @Model.Order.PaidDate.Value.ToString("g")</p>
                            }
                        </div>
                        <div class="col-md-4">
                            <p>
                                <strong>@L["ShippingStatus"]:</strong>
                                <span class="badge @GetPaymentStatusBadgeClass(Model.Order.PaymentStatus)">
                                    <i class="fas fa-truck me-1"></i> @Model.Order.ShippingStatus.GetDescription().LocalizedEnum(L)
                                </span>
                            </p>
                            
                            @if (Model.Order.ShippingDate.HasValue)
                            {
                                <p><strong>@L["ShippingDate"]:</strong> @Model.Order.ShippingDate.Value.ToString("g")</p>
                            }
                        </div>
                    </div>

                    @if (Model.Order.Status != OrderStatus.Cancelled)
                    {
                        var isPaid = Model.Order.PaymentStatus == PaymentStatus.Paid;
                        var isShipped = Model.Order.ShippingStatus == ShippingStatus.Shipped;
                        var isDelivered = Model.Order.ShippingStatus == ShippingStatus.Delivered;

                        var progressPercentage = 25;
                        if (isPaid) progressPercentage = 50;
                        if (isPaid && isShipped) progressPercentage = 75;
                        if (isPaid && isDelivered) progressPercentage = 100;

                        <div class="mt-4">
                            <h6><i class="fas fa-stream me-1"></i>@L["Title:OrderProgress"]</h6>
                            <div class="progress" style="height: 24px;">
                                <div class="progress-bar progress-bar-striped progress-bar-animated bg-success"
                                     role="progressbar"
                                     style="width: @progressPercentage%"
                                     aria-valuenow="@progressPercentage"
                                     aria-valuemin="0"
                                     aria-valuemax="100">
                                    <strong>
                                        @progressPercentage% @L["Complete"]
                                    </strong>
                                </div>
                            </div>
                        </div>

                        @if (!string.IsNullOrWhiteSpace(Model.Order.Notes))
                        {
                            <div class="alert alert-secondary mt-3">
                                <strong>@L["Notes"]:</strong> @Model.Order.Notes
                            </div>
                        }
                    }
                </div>
            </div>
        </div>

        <!-- Right column: Payment -->
        <div class="col-lg-4">
            @if (Model.PaymentDetail?.PaymentTransaction != null)
            {
                <!-- Payment Transaction -->
                <div class="card shadow-sm rounded-4">
                    <div class="card-header bg-success text-white rounded-top-4">
                        <h5 class="mb-0">@L["Title:PaymentDetails"]</h5>
                    </div>
                    <div class="card-body">
                        <p><strong>@L["Amount"]:</strong> Ksh: @Model.PaymentDetail.PaymentTransaction.Amount</p>
                        <p><strong>@L["Method"]:</strong> @Model.PaymentDetail.PaymentTransaction.PaymentMethod.GetDescription().LocalizedEnum(L)</p>
                        <p><strong>@L["Status"]:</strong> @Model.PaymentDetail.PaymentTransaction.Status.GetDescription().LocalizedEnum(L)</p>
                        @if (!string.IsNullOrEmpty(Model.PaymentDetail.PaymentTransaction.GatewayTransactionId))
                        {
                            <p><strong>@L["GatewayTransactionId"]:</strong> @Model.PaymentDetail.PaymentTransaction.GatewayTransactionId</p>
                        }
                        @if (Model.PaymentDetail.PaymentTransaction?.PaymentDate != null)
                        {
                            <p><strong>@L["PaymentDate"]:</strong> @Model.PaymentDetail.PaymentTransaction.PaymentDate.Value.ToString("g")</p>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.PaymentDetail.PaymentTransaction?.Notes))
                        {
                            <div class="alert alert-info">
                                @Model.PaymentDetail.PaymentTransaction.Notes
                            </div>
                        }

                        @if (Model.Order.PaymentStatus != PaymentStatus.Paid && Model.Order.Status != OrderStatus.Cancelled)
                        {
                            <div class="mt-3 text-end">
                                <form method="post" asp-page-handler="RetryPayment">
                                    <input type="hidden" name="OrderId" value="@Model.Order.Id" />
                                    <button type="submit" class="btn btn-outline-success">
                                        <i class="fas fa-redo me-1"></i> @L["Retry Payment"]
                                    </button>
                                </form>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- M-Pesa Collapsible -->
            @if (Model.PaymentDetail?.MpesaTransaction != null)
            {
                <div class="accordion mt-4" id="mpesaAccordion">
                    <div class="accordion-item rounded-4 shadow-sm">
                        <h2 class="accordion-header" id="headingMpesa">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseMpesa" aria-expanded="false" aria-controls="collapseMpesa">
                                @L["Title:MpesaTransactionDetails"]
                            </button>
                        </h2>
                        <div id="collapseMpesa" class="accordion-collapse collapse" aria-labelledby="headingMpesa" data-bs-parent="#mpesaAccordion">
                            <div class="accordion-body">
                                <p><strong>@L["Status"]:</strong> @Model.PaymentDetail.MpesaTransaction.Status</p>
                                <p><strong>@L["SentOn"]:</strong> @Model.PaymentDetail.MpesaTransaction.SentOn.ToString("g")</p>

                                @if (Model.PaymentDetail.MpesaTransaction.ConfirmedOn.HasValue)
                                {
                                    <p><strong>@L["ConfirmedOn"]:</strong> @Model.PaymentDetail.MpesaTransaction.ConfirmedOn.Value.ToString("g")</p>
                                }

                                <p><strong>@L["MpesaReceiptNumber"]:</strong> @Model.PaymentDetail.MpesaTransaction.MpesaReceiptNumber</p>
                                <p><strong>@L["PhoneNumber"]:</strong> @Model.PaymentDetail.MpesaTransaction.PhoneNumber</p>

                                @* <p><strong>@L["CheckoutRequestId"]:</strong> @Model.PaymentDetail.MpesaTransaction.CheckoutRequestId</p>
                                <p><strong>@L["MerchantRequestId"]:</strong> @Model.PaymentDetail.MpesaTransaction.MerchantRequestId</p>
                                <p><strong>@L["ResponseCode"]:</strong> @Model.PaymentDetail.MpesaTransaction.ResponseCode</p>
                                <p><strong>@L["ResultCode"]:</strong> @Model.PaymentDetail.MpesaTransaction.ResultCode</p> *@

                                @* @if (!string.IsNullOrEmpty(Model.PaymentDetail.MpesaTransaction.CustomerMessage))
                                {
                                    <div class="alert alert-warning">
                                        <strong>@L["CustomerMessage"]:</strong> @Model.PaymentDetail.MpesaTransaction.CustomerMessage
                                    </div>
                                }

                                @if (!string.IsNullOrEmpty(Model.PaymentDetail.MpesaTransaction.ResponseDecription) || !string.IsNullOrEmpty(Model.PaymentDetail.MpesaTransaction.ResultDesc))
                                {
                                    <div class="alert alert-secondary">
                                        <strong>@L["ResponseDescription"]:</strong> @Model.PaymentDetail.MpesaTransaction.ResponseDecription<br />
                                        <strong>@L["ResultDescription"]:</strong> @Model.PaymentDetail.MpesaTransaction.ResultDesc
                                    </div>
                                } *@
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}